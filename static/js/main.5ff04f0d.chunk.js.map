{"version":3,"sources":["utils/fetchClient.ts","api/user.ts","components/AuthForm/AuthForm.tsx","api/todos.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodosFilter/TodosFilter.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","navigate","useNavigate","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","changeTodo","todoId","deleteTodo","TodoItem","React","memo","item","key","setTodoStatus","removeTodo","changeTodoTitle","isEditing","setIsEditing","newTitle","setNewTitle","completed","editing","onDoubleClick","checked","autoFocus","onBlur","onKeyDown","code","title","data-cy","onClick","TodoList","todos","map","TodosFilter","sortParam","setSortParam","to","selected","TodoApp","setTodos","todoTitle","setTodoTitle","isPressSubmit","setIsPressSubmit","toggleAll","setToggleAll","filterParam","setFilterParam","userId","changeIsPressSubmit","curr","todosLeft","useMemo","reduce","acc","todo","createTodos","count","length","setToggleAllTodos","filteredTodos","filter","App","setUser","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5ff04f0d.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createUser, getUserByEmail } from '../../api/user';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const navigate = useNavigate();\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n    navigate('/todos');\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    const user = JSON.parse(userData) as User;\n\n    onLogin(user);\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (title: string, userId: number) => {\n  return client.post<Todo>('/todos', {\n    title,\n    userId,\n    completed: false,\n  });\n};\n\nexport const changeTodo = (todoId: number, value: {}) => {\n  return client.patch(`/todos/${todoId}`, value);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  item: Todo;\n  key: number;\n  setTodoStatus:(id: number) => void;\n  removeTodo: (id: number) => void;\n  changeTodoTitle: (id: number, newTitle: string) => void;\n};\n\nexport const TodoItem: React.FC<Props> = React.memo(\n  ({\n    item,\n    key,\n    setTodoStatus,\n    removeTodo,\n    changeTodoTitle,\n  }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [newTitle, setNewTitle] = useState('');\n\n    return (\n      <li\n        key={key}\n        className={classNames('todo', {\n          completed: item.completed,\n          editing: isEditing,\n        })}\n        onDoubleClick={() => setIsEditing(true)}\n      >\n        <label className=\"todo__status-label\">\n          <input\n            type=\"checkbox\"\n            className=\"todo__status\"\n            checked={item.completed}\n            onChange={() => setTodoStatus(item.id)}\n          />\n        </label>\n        {!isEditing\n          ? (\n            <>\n              <span className=\"todo__title\">{item.title}</span>\n              <button\n                type=\"button\"\n                className=\"todo__remove\"\n                data-cy=\"deleteTodo\"\n                onClick={() => removeTodo(item.id)}\n              >\n                x\n              </button>\n            </>\n          )\n          : (\n            <input\n              type=\"text\"\n              className=\"todo__title-field\"\n              value={newTitle}\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus\n              onChange={event => setNewTitle(event.target.value)}\n              onBlur={() => {\n                if (newTitle) {\n                  changeTodoTitle(item.id, newTitle);\n                }\n\n                setNewTitle('');\n                setIsEditing(false);\n              }}\n              onKeyDown={(event) => {\n                if (event.code === 'Enter' && newTitle) {\n                  changeTodoTitle(item.id, newTitle);\n                  setNewTitle('');\n                  setIsEditing(false);\n                }\n\n                if (event.code === 'Escape') {\n                  setNewTitle('');\n                  setIsEditing(false);\n                }\n              }}\n            />\n          )}\n\n      </li>\n    );\n  },\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  setTodoStatus:(id: number) => void;\n  removeTodo: (id: number) => void;\n  changeTodoTitle: (id: number, newTitle: string) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodoStatus,\n  removeTodo,\n  changeTodoTitle,\n}) => {\n  return (\n    <section className=\"todoapp__main\">\n      {todos.map(item => (\n        <TodoItem\n          item={item}\n          key={item.id}\n          setTodoStatus={setTodoStatus}\n          removeTodo={removeTodo}\n          changeTodoTitle={changeTodoTitle}\n        />\n      ))}\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  sortParam: string;\n  setSortParam: (value: string) => void;\n};\n\nexport const TodosFilter: React.FC<Props> = ({ sortParam, setSortParam }) => (\n  <nav className=\"filters\">\n    <Link\n      to=\"../\"\n      className={classNames(\n        'filter__link',\n        { selected: sortParam === 'all' },\n      )}\n      onClick={() => setSortParam('all')}\n    >\n      All\n    </Link>\n\n    <Link\n      to=\"../active\"\n      className={classNames(\n        'filter__link',\n        { selected: sortParam === 'active' },\n      )}\n      onClick={() => setSortParam('active')}\n    >\n      Active\n    </Link>\n\n    <Link\n      to=\"../completed\"\n      className={classNames(\n        'filter__link',\n        { selected: sortParam === 'completed' },\n      )}\n      onClick={() => setSortParam('completed')}\n    >\n      Completed\n    </Link>\n  </nav>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  changeTodo, createTodo, deleteTodo, getTodos,\n} from '../../api/todos';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const TodoApp: React.FC<Props> = React.memo(\n  ({ user }) => {\n    const [todos, setTodos] = useState<Todo[]>([]);\n    const [todoTitle, setTodoTitle] = useState('');\n    const [isPressSubmit, setIsPressSubmit] = useState(false);\n    const [toggleAll, setToggleAll] = useState(false);\n    const [filterParam, setFilterParam] = useState('all');\n\n    useEffect(() => {\n      getTodos(user.id)\n        .then(setTodos);\n    }, [isPressSubmit]);\n\n    const changeIsPressSubmit = () => {\n      setIsPressSubmit(curr => !curr);\n    };\n\n    const setToggleAllTodos = (count: number) => {\n      if (count === todos.length && todos.length > 0) {\n        setToggleAll(true);\n      }\n\n      if (count === 0) {\n        setToggleAll(false);\n      }\n    };\n\n    const todosLeft = useMemo(() => {\n      return (\n        todos.reduce((acc, todo) => (!todo.completed ? acc + 1 : acc), 0)\n      );\n    }, [todos]);\n\n    const createTodos = useMemo(() => {\n      const count = (\n        todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0)\n      );\n\n      setToggleAllTodos(count);\n\n      return count;\n    }, [todos]);\n\n    const toggleAllTodos = () => {\n      if (toggleAll) {\n        setTodos(curr => curr.map((todo) => {\n          if (todo.completed) {\n            changeTodo(todo.id, { completed: false });\n\n            return { ...todo, completed: false };\n          }\n\n          setToggleAll(false);\n\n          return todo;\n        }));\n      } else {\n        setTodos(curr => curr.map((todo) => {\n          if (!todo.completed) {\n            changeTodo(todo.id, { completed: true });\n\n            return { ...todo, completed: true };\n          }\n\n          setToggleAll(true);\n\n          return todo;\n        }));\n      }\n    };\n\n    const removeTodo = (id: number) => {\n      setTodos(curr => curr.filter((todo) => {\n        if (todo.id === id) {\n          deleteTodo(id);\n        }\n\n        return todo.id !== id;\n      }));\n    };\n\n    const setTodoStatus = (id: number) => {\n      setTodos(curr => curr.map(todo => {\n        if (todo.id === id) {\n          if (todo.completed) {\n            setToggleAll(false);\n          }\n\n          changeTodo(id, { completed: !todo.completed });\n\n          return { ...todo, completed: !todo.completed };\n        }\n\n        return todo;\n      }));\n    };\n\n    const changeTodoTitle = (id: number, newTitle: string) => {\n      setTodos(curr => curr.map((todo) => {\n        if (todo.id === id) {\n          changeTodo(id, { title: newTitle });\n\n          return { ...todo, title: newTitle };\n        }\n\n        return todo;\n      }));\n    };\n\n    const filteredTodos = useMemo(() => {\n      switch (filterParam) {\n        case 'active':\n          return todos.filter(todo => !todo.completed);\n        case 'completed':\n          return todos.filter(todo => todo.completed);\n        default:\n          return todos;\n      }\n    }, [filterParam, todos]);\n\n    const deleteCompleted = () => {\n      setTodos(curr => curr.filter((todo) => {\n        if (todo.completed) {\n          deleteTodo(todo.id);\n        }\n\n        return !todo.completed;\n      }));\n    };\n\n    return (\n      <div className=\"todoapp\">\n        <h1 className=\"todoapp__title\">todos</h1>\n\n        <div className=\"todoapp__content\">\n          <header className=\"todoapp__header\">\n            {todos.length > 0 && (\n              <button\n                type=\"button\"\n                className={classNames(\n                  'todoapp__toggle-all',\n                  { 'is-active': toggleAll },\n                )}\n                onClick={toggleAllTodos}\n              />\n            )}\n            <form\n              onSubmit={(event) => {\n                event.preventDefault();\n                if (todoTitle) {\n                  createTodo(todoTitle, user.id)\n                    .then(changeIsPressSubmit);\n                  setTodoTitle('');\n                }\n              }}\n            >\n              <input\n                type=\"text\"\n                data-cy=\"createTodo\"\n                className=\"todoapp__new-todo\"\n                placeholder=\"What needs to be done?\"\n                value={todoTitle}\n                onChange={({ target }) => {\n                  setTodoTitle(target.value);\n                }}\n              />\n            </form>\n          </header>\n\n          <TodoList\n            todos={filteredTodos}\n            setTodoStatus={setTodoStatus}\n            removeTodo={removeTodo}\n            changeTodoTitle={changeTodoTitle}\n          />\n\n          {todos.length > 0 && (\n            <footer className=\"todoapp__footer\">\n              <span className=\"todo-count\">\n                {todosLeft > 0 && `${todosLeft} ${todosLeft > 1 ? 'items' : 'item'} left`}\n              </span>\n\n              <TodosFilter\n                sortParam={filterParam}\n                setSortParam={setFilterParam}\n              />\n\n              <button\n                type=\"button\"\n                className=\"todoapp__clear-completed\"\n                onClick={deleteCompleted}\n              >\n                {createTodos !== 0 && 'Clear completed'}\n              </button>\n            </footer>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { AuthForm } from './components/AuthForm';\n\nimport { TodoApp } from './components/TodoApp';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<AuthForm onLogin={setUser} />} />\n      <Route path=\"todos\">\n        <Route\n          index\n          element={user ? <TodoApp user={user} /> : <Navigate to=\"/\" />}\n        />\n        <Route path=\":filterParam\" element={user && <TodoApp user={user} />} />\n      </Route>\n    </Routes>\n  );\n};\n","/* eslint-disable react/react-in-jsx-scope */\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './styles/index.scss';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}